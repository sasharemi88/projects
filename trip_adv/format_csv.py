# -*- coding: utf-8 -*-
"""
Created on Wed Oct 28 17:04:39 2020

@author: Sasha
"""


import csv
import os
import re
from datetime import date as dt
from dateutil.relativedelta import relativedelta as rd


#функции для округления даты до квартала и года
def round_qtr (d):
    return(dt(d.year, 3*(d.month // 3)-2, 1))

def round_year (d):
    return(dt(d.year, 1, 1))

#по умолчанию собираем только за текущий квартал и год
td = dt.today() 
    
dates = [] 
#в итераторе - кол-во кварталов, которые нужно проставить
for n in range(12):
    dates.append([str(round_qtr(td)), 'q'])
    td = td - rd(months=3) 
    
td = dt.today()     
#в итераторе - кол-во лет, которые нужно проставить
for n in range(3):
    dates.append([str(round_year(td)), 'y'])
    td = td - rd(years=1) 


#список файлов для обработки
#files = ['Karelia.csv','Moscow.csv','NiNo.csv','Novgorod.csv','Samara.csv']
files = ['msk-2211.csv']


def rebuild(file):
    #словарь "категории трипадвизорва: категории МСС"
    cat_d = {('Отели',''): ('Туризм/транспорт','Отели'),
             ('Рестораны',''): ('Кафе/бары/рестораны','Кафе/бары/рестораны'),
             ('Достопримечательности','Музеи'): ('Достопримечательности', 'Музеи'),
             ('Достопримечательности','Еда и напитки'): ('Отдых/развлечения/спорт','Развлечения'),
             ('Достопримечательности','Достопримечательности и культурные объекты'): ('Достопримечательности', 'Культурные объекты'),
             ('Достопримечательности','Природа и парки'): ('Достопримечательности','Парки'),
             ('Достопримечательности', 'Церкви и соборы'): ('Достопримечательности','Церкви и соборы'),
             ('Достопримечательности','Покупки'): ('Достопримечательности','Торговые центры'),
             ('Достопримечательности','Зоопарки и океанариумы'): ('Отдых/развлечения/спорт','Развлечения'),
             ('Достопримечательности','Транспорт'): ('Туризм/транспорт','Общественный транспорт/Такси'),
             ('Достопримечательности','Ресурсы для путешественников'): ('Туризм/транспорт','Турагенства'),
             ('Достопримечательности','Развлечения и игры'): ('Отдых/развлечения/спорт','Развлечения')
            }
    
    
    
    uniq = []    
    file_in = os.path.join('all_obj', file)
    file_out = file   
    with open(file_in, 'r', encoding='utf8') as f:
        reader = csv.DictReader(f, delimiter=',')
        with open(file_out, 'w', newline='', encoding='utf8') as orign:
            fields = ['Широта', 'Долгота', 'Наименование', 'Адрес', 'Категория', 'Подкатегория',  'Дата', 'Тип даты']
            writer = csv.DictWriter(orign, fieldnames=fields, delimiter='\t', quoting=csv.QUOTE_NONE, quotechar='',escapechar='\\')
            writer.writeheader()
            for line in reader:
                if line['с0_id'] not in uniq and line['с6_name']:                    
                    for d in dates:
                        name = re.sub('^\"|\"$/g','', line['с6_name'])
                        adress = re.sub('^\"|\"$/g','', line['с7_adress'])
                        cat_key = (line['с3_category'], line['с4_subcategory'])
                        print(cat_key)
                        mcc_cat = cat_d[cat_key][0]
                        mcc_subcat = cat_d[cat_key][1]                        
                        writer.writerow({'Широта': line['с8_latitude'],
                                         'Долгота': line['с9_longitude'],
                                         'Наименование': re.sub('|^ | +$| $| ?\t', '', re.sub('\"\"/g', '"', name)),  #второй пробел в маске поиска - какая-то неведомая фиговина, отличающаяся от обычного пробела
                                         'Адрес':re.sub('\"\"/g', '"', adress) ,
                                         'Категория': mcc_cat,
                                         'Подкатегория': mcc_subcat,                                         
                                         'Дата': d[0],
                                         'Тип даты': d[1]
                                        })
                    uniq.append(line['с0_id'])
    return print(file_in, ' - ', file_out)                

if __name__ == '__main__':
    for f in files:
        rebuild(f)
#%%        
cat_d2 = {('Отели',''): ('64','Гостиницы и санатории',''),
             ('Рестораны',''): ('11','Кафе/бары/рестораны',''),
             ('Достопримечательности','Музеи'): ('','','Музеи'),
             ('Достопримечательности','Еда и напитки'): ('65','Турагенства',''),
             ('Достопримечательности','Достопримечательности и культурные объекты'): ('','', 'Достопримечательности'),
             ('Достопримечательности','Природа и парки'): ('','','Парки'),
             ('Достопримечательности', 'Церкви и соборы'): ('','','Церкви и соборы'),
             ('Достопримечательности','Покупки'): ('','','Торговые центры'),
             ('Достопримечательности','Зоопарки и океанариумы'): ('28','Зрелищные развлечения',''),
             ('Достопримечательности','Транспорт'): ('66','Общественный транспорт',''),
             ('Достопримечательности','Ресурсы для путешественников'): ('65','Турагенства',''),
             ('Достопримечательности','Развлечения и игры'): ('28','Активные развлечения','')
            }

with open('categories.csv', 'w', newline='', encoding='utf8') as f:
    fields = ['Категория TripAdviser', 'Подкатегория  TripAdviser', 'МСС id', 'Категория MCC', 'Достопримечательность']
    writer = csv.DictWriter(f, fieldnames=fields, delimiter='\t', quoting=csv.QUOTE_NONE, quotechar='',escapechar='\\')
    writer.writeheader()
    for i in cat_d2.items():
             writer.writerow({'Категория TripAdviser': i[0][0],
                                  'Подкатегория  TripAdviser': i[0][1],
                                  'МСС id': i[1][0],
                                  'Категория MCC': i[1][1],
                                  'Достопримечательность': i[1][2]
                                    })
 