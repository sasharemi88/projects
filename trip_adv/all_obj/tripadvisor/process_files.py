import csv
from pathlib import Path

import pandas as pd


def read_files(path):
    """ Чтение csv файлов из папки в один датафрейм.

    Parameters
    ----------
    path : str
        Путь к файлам.

    Returns
    -------
        df : pandas.DataFrame

    """
    df = pd.DataFrame()
    for file in Path(path).glob('*.csv'):
        df = df.append(pd.read_csv(file, dtype=str, keep_default_na=False))

    return df


def clear_df(df):
    """ Очистка датафрейма от ненужных строк и дублей.

    Parameters
    ----------
    df : pandas.DataFrame

    Returns
    -------
    df : pandas.DataFrame

    """
    df = df.copy()
    df = df[df['Широта'] != '']
    df.replace(to_replace=r'\s+', value=' ', regex=True, inplace=True)
    df = df.applymap(lambda x: x.strip())
    df.drop_duplicates(keep='first', inplace=True)

    return df


def set_categories(df):
    """ Замена категорий и подкатегорий в датафрейме.

    Parameters
    ----------
    df : pandas.DataFrame

    Returns
    -------
    df : pandas.DataFrame

    """
    df = df.copy()

    matching = [
        ['attraction', 'Концерты и представления', 'Отдых/развлечения/спорт', 'Развлечения'],
        ['attraction', 'Достопримечательности и культурные объекты', 'Достопримечательности', 'Культурные объекты'],
        ['attraction', 'Природа и парки', 'Достопримечательности', 'Парки'],
        ['attraction', 'Музеи', 'Достопримечательности', 'Музеи'],
        ['attraction', 'Развлечения и игры', 'Отдых/развлечения/спорт', 'Развлечения'],
        ['attraction', 'Еда и напитки', 'Отдых/развлечения/спорт', 'Развлечения'],
        ['attraction', 'Активный отдых на открытом воздухе', 'Отдых/развлечения/спорт', 'Развлечения'],
        ['attraction', 'Ресурсы для путешественников', 'Туризм/транспорт', 'Турагенства'],
        ['attraction', 'Покупки', 'Достопримечательности', 'Торговые центры'],
        ['attraction', 'Зоопарки и океанариумы', 'Отдых/развлечения/спорт', 'Развлечения'],
        ['attraction', 'Туры', 'Отдых/развлечения/спорт', 'Турагенства'],
        ['attraction', 'Ночная жизнь', 'Отдых/развлечения/спорт', 'Развлечения'],
        ['attraction', 'Аквапарки и парки развлечений', 'Отдых/развлечения/спорт', 'Развлечения'],
        ['attraction', 'Спа и оздоровление', 'Красота и здоровье', 'Салоты красоты/массаж/SPA'],
        ['attraction', 'Мероприятия', 'Отдых/развлечения/спорт', 'Прочие услуги'],
        ['attraction', 'Мастер-классы и семинары', 'Отдых/развлечения/спорт', 'Прочие услуги'],
        ['attraction', 'Транспорт', 'Туризм/транспорт', 'Общественный транспорт/Такси'],
        ['attraction', 'Другое', 'Достопримечательности', 'Другое'],
        ['attraction', 'Казино и азартные игры', 'Отдых/развлечения/спорт', 'Азартные игры'],
        ['attraction', 'Церкви и соборы', 'Достопримечательности', 'Церкви и соборы'],
        ['hotel',      'Отель', 'Туризм/транспорт', 'Отели'],
        ['hotel',      'B&B/мини-отель', 'Туризм/транспорт', 'Отели'],
        ['hotel',      'Жилье особого типа', 'Туризм/транспорт', 'Отели'],
        ['restaurant', 'Ресторан', 'Кафе/бары/рестораны', 'Кафе/бары/рестораны'],
        ['restaurant', 'Кафе', 'Кафе/бары/рестораны', 'Кафе/бары/рестораны'],
        ['restaurant', '', 'Кафе/бары/рестораны', 'Кафе/бары/рестораны'],
        ['restaurant', 'Фаст-фуд', 'Кафе/бары/рестораны', 'Фастфуд рестораны']
    ]

    for matchstr in matching:
        df.loc[(df['Категория'] == matchstr[0]) & (df['Подкатегория'] == matchstr[1]),
               ['Категория', 'Подкатегория']] = matchstr[2:]

    # Отдельно выделить церкви и соборы
    df.loc[(df['Категория'] == 'Достопримечательности') &
           (df['Наименование'].str.contains('собор |храм |церковь|монастырь', case=False)),
           ['Категория', 'Подкатегория']] = ['Достопримечательности', 'Церкви и соборы']

    return df


if __name__ == '__main__':
    # Путь к текущей папке
    cwd = Path(__file__).parent

    # Открыть файлы в 1 датафрейм
    df = read_files(cwd)

    # Удалить строки с пустой широтой
    # Убрать дубликаты
    df = clear_df(df)

    # Сопоставить категории и подкатегории
    df = set_categories(df)

    # Сохранить в csv с табуляцией
    df.to_csv('result.csv', sep='\t', index=False, quoting=csv.QUOTE_NONE)